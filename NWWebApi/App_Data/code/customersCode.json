[
  {
    "id": 0,
    "accordionName": "accordionCustomerOrdersCode",
    "title": "HTML View",
    "hrefName": "384b7fdc-ccd3-43d9-8689-1e68d49eff31",
    "href": "#384b7fdc-ccd3-43d9-8689-1e68d49eff31",
    "fileLocation": "Folder \\views\\customers\\customers.html",
    "fileContent": "&lt;template&gt;\r\n    &lt;!--&lt;require from=&#39;../modules/pager-source.html&#39;&gt;&lt;/require&gt;--&gt;\r\n    &lt;section&gt;\r\n        &lt;div class=&quot;panel panel-default&quot;&gt;\r\n           \r\n            &lt;div class=&quot;panel-body&quot;&gt;\r\n                &lt;div class=&quot;row&quot;&gt;\r\n                    &lt;div class=&quot;col-md-6&quot;&gt;\r\n                        &lt;br /&gt;\r\n                        &lt;div class=&quot;input-group&quot;&gt;\r\n                            &lt;input type=&quot;text&quot; value.bind=&quot;datasource.searchCriteria&quot; keyup.delegate=&quot;onKeyUp($event)&quot;\r\n                                   class=&quot;form-control&quot; placeholder=&quot;Customers Company or Contry&quot;&gt;\r\n                            &lt;div class=&quot;input-group-btn&quot;&gt;\r\n                                &lt;button type=&quot;button&quot; class=&quot;btn btn-success&quot; tabindex=&quot;-1&quot;\r\n                                        click.trigger=&quot;searchAll()&quot;&gt;\r\n                                    Search\r\n                                &lt;/button&gt;\r\n                                &lt;button type=&quot;button&quot; class=&quot;btn btn-success dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; tabindex=&quot;-1&quot;&gt;\r\n                                    &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;\r\n                                    &lt;span class=&quot;sr-only&quot;&gt;Toggle Dropdown&lt;/span&gt;\r\n                                &lt;/button&gt;\r\n                                &lt;ul class=&quot;dropdown-menu pull-right&quot;&gt;&lt;/ul&gt;\r\n                            &lt;/div&gt;&lt;!-- /btn-group --&gt;\r\n\r\n                        &lt;/div&gt;&lt;!-- /input-group --&gt;\r\n                    &lt;/div&gt;&lt;!-- /.col-lg-6 --&gt;\r\n                    &lt;div class=&quot;col-md-6&quot;&gt;\r\n\r\n                    &lt;/div&gt;\r\n                &lt;/div&gt;\r\n                &lt;hr /&gt;\r\n                &lt;table class=&quot;table table-condensed table-responsive&quot;&gt;\r\n                    &lt;thead&gt;\r\n                        &lt;tr&gt;\r\n                            &lt;td&gt;Account&lt;/td&gt;\r\n                            &lt;td&gt;Company Name&lt;/td&gt;\r\n                            &lt;td&gt;Contact Name&lt;/td&gt;\r\n                            &lt;td&gt;Country&lt;/td&gt;\r\n                        &lt;/tr&gt;\r\n                    &lt;/thead&gt;\r\n                    &lt;tbody&gt;\r\n                        &lt;tr repeat.for=&quot;customer of  datasource.displaySource&quot;&gt;\r\n                            &lt;td&gt;&lt;a route-href=&quot;route: customerEdit; params.bind: {id:customer.customerID}&quot;&gt;${customer.customerID}&lt;/a&gt;&lt;/td&gt;\r\n                            &lt;td&gt;${customer.companyName}&lt;/td&gt;\r\n                            &lt;td&gt;${customer.contactName}&lt;/td&gt;\r\n                            &lt;td&gt;${customer.contactName}&lt;/td&gt;\r\n                        &lt;/tr&gt;\r\n                    &lt;/tbody&gt;\r\n                &lt;/table&gt;\r\n                &lt;hr /&gt;\r\n                &lt;data-source source.bind=&quot;datasource&quot;&gt;&lt;/data-source&gt;\r\n                &lt;hr /&gt;\r\n                &lt;pager-source source.bind=&quot;datasource&quot;&gt;&lt;/pager-source&gt;\r\n            &lt;/div&gt;\r\n        &lt;/div&gt;\r\n     &lt;/section&gt;\r\n&lt;/template&gt;",
    "group": "language-markup"
  },
  {
    "id": 1,
    "accordionName": "accordionCustomerOrdersCode",
    "title": "View Model",
    "hrefName": "be4bca80-d69c-41fb-bf74-4efe0848747c",
    "href": "#be4bca80-d69c-41fb-bf74-4efe0848747c",
    "fileLocation": "Folder \\views\\customers\\customers.js",
    "fileContent": "import {inject} from &quot;aurelia-framework&quot;;\r\nimport {SourceManager} from &quot;../modules/SourceManager&quot;;\r\nimport {CustomerDataContext} from &quot;./CustomerDataContext&quot;;\r\nimport _ from &#39;lodash&#39;;\r\n\r\n\r\n@inject(SourceManager, CustomerDataContext)\r\nexport class Customers {\r\n     constructor(datasource, dataContext) {\r\n                this.title = &quot;List Customers&quot;;\r\n                this.datasource = new SourceManager(10);\r\n                this.dataContext = dataContext;\r\n   }\r\n    activate() {\r\n        return this.dataContext.getAll()\r\n            .then(result =&gt; {\r\n                   this.datasource.pageInit(result.customers);\r\n        });\r\n    }\r\n    onKeyUp(ev) {\r\n        if (ev.keyCode === 13) {\r\n            this.searchAll();\r\n        }\r\n    } \r\n    searchAll() {\r\n        \r\n        if (this.datasource.searchCriteria !== &#39;&#39;) {\r\n            var filter = this.datasource.searchCriteria.trim().toLowerCase();\r\n            var customerResults = _.filter(this.datasource.sourceCache,\r\n                function (cust) {\r\n                  \r\n                    return _.includes(cust.companyName.trim().toLowerCase(),\r\n                        filter.trim().toLowerCase()) ||\r\n                        _.includes(cust.contactName.trim().toLowerCase(),\r\n                        filter.trim().toLowerCase()) ||\r\n                        _.includes(cust.country.trim().toLowerCase(),\r\n                        filter.trim().toLowerCase());\r\n                });\r\n            this.datasource.pageSearch(customerResults);\r\n        } else {\r\n            this.datasource.pageSearch(this.datasource.sourceCache);\r\n        } \r\n     }\r\n}\r\n",
    "group": "language-javascript"
  },
  {
    "id": 2,
    "accordionName": "accordionCustomerOrdersCode",
    "title": "Customer Info",
    "hrefName": "1064051d-e339-4265-a722-a73932fe92c6",
    "href": "#1064051d-e339-4265-a722-a73932fe92c6",
    "fileLocation": "Folder \\views\\customers\\customerInfo.js",
    "fileContent": "import {Validation} from &#39;aurelia-validation&#39;;\r\n\r\nexport class CustomerInfo {\r\n    constructor(){\r\n    this.customerID=&quot;&quot;;\r\n    this.companyName=&quot;&quot;;\r\n    this.contactName =&quot;&quot;;\r\n    this.contactTitle=&quot;&quot;;\r\n    this.address=&quot;&quot;;\r\n    this.city=&quot;&quot;;\r\n    this.region=&quot;&quot;;\r\n    this.postalCode=&quot;&quot;;\r\n    this.country=&quot;&quot;;\r\n    this.phone=&quot;&quot;;\r\n    this.fax=&quot;&quot;;\r\n    this.validation;\r\n    }\r\n    static toJson(cust) {\r\n        return {\r\n            &quot;customerID&quot;: cust.customerID,\r\n            &quot;companyName&quot;: cust.companyName,\r\n            &quot;contactName&quot;: cust.contactName,\r\n            &quot;contactTitle&quot;: cust.contactTitle,\r\n            &quot;address&quot;: cust.address,\r\n            &quot;city&quot;: cust.city,\r\n            &quot;region&quot;: cust.region,\r\n            &quot;postalCode&quot;: cust.postalCode,\r\n            &quot;country&quot;: cust.country,\r\n            &quot;phone&quot;: cust.phone,\r\n            &quot;fax&quot;: cust.fax\r\n        };\r\n    }\r\n    static Validate(cust, validation) {\r\n        cust.validation = validation.on(cust)\r\n            .ensure(&quot;customerID&quot;)\r\n               .isNotEmpty()\r\n               .hasLengthBetween(5, 5)\r\n            .ensure(&quot;companyName&quot;)\r\n               .isNotEmpty()\r\n               .hasLengthBetween(3, 40)\r\n            .ensure(&quot;contactName&quot;)\r\n               .isNotEmpty()\r\n               .hasLengthBetween(3, 30)\r\n            .ensure(&quot;contactTitle&quot;)\r\n               .isNotEmpty()\r\n               .hasLengthBetween(3, 30)\r\n            .ensure(&quot;address&quot;)\r\n               .isNotEmpty()\r\n               .hasMaxLength(60)\r\n            .ensure(&quot;city&quot;)\r\n               .isNotEmpty()\r\n               .hasMaxLength(15)\r\n            .ensure(&quot;postalCode&quot;)\r\n               .isNotEmpty()\r\n               .hasMaxLength(10)\r\n            .ensure(&quot;country&quot;)\r\n               .isNotEmpty()\r\n               .hasMaxLength(15)\r\n            .ensure(&quot;phone&quot;)\r\n              .isNotEmpty()\r\n              .hasMaxLength(24);\r\n    }\r\n\r\n}\r\n",
    "group": "language-javascript"
  },
  {
    "id": 3,
    "accordionName": "accordionCustomerOrdersCode",
    "title": "Data Context",
    "hrefName": "723b90e9-4c8f-4585-9c7b-297fe34c955f",
    "href": "#723b90e9-4c8f-4585-9c7b-297fe34c955f",
    "fileLocation": "Folder \\views\\customers\\customerDataContext.js",
    "fileContent": "import {inject} from &quot;aurelia-framework&quot;;\r\nimport {ContextBaseFetch} from &quot;../modules/contextBaseFetch&quot;;\r\nimport {AppConstants} from &quot;../modules/appConstants&quot;;\r\n@inject(ContextBaseFetch)\r\nexport class CustomerDataContext {\r\n    apiUrl = AppConstants.urlBase +&quot;CustomersApi&quot;; \r\n\r\n    constructor(context) {\r\n        this.context = context;\r\n        this.context.apiName = this.apiUrl;\r\n    }\r\n    getAll() {\r\n        this.context.apiName = this.apiUrl;\r\n         return this.context.getAll()\r\n            .then(result =&gt; { return result });\r\n    }\r\n    getById(id) {\r\n        this.context.apiName = this.apiUrl;\r\n        return this.context.getById(id)\r\n          \r\n    }\r\n    deleteRecord(id) {\r\n        this.context.apiName = this.apiUrl;\r\n        return this.context.deleteByID(id);\r\n            \r\n    }\r\n    update(customer) {\r\n        this.context.apiName = this.apiUrl;\r\n         return this.context.update(customer, customer.customerID);\r\n    }\r\n    save(customer) {\r\n       this.context.apiName = this.apiUrl;\r\n       return this.context.save(customer);\r\n    }\r\n}",
    "group": "language-javascript"
  },
  {
    "id": 4,
    "accordionName": "accordionContextBaseFetch",
    "title": "Context Base Fetch",
    "hrefName": "d31ca569-e5d8-46ff-9ec1-be484fd1b051",
    "href": "#d31ca569-e5d8-46ff-9ec1-be484fd1b051",
    "fileLocation": "Folder modules",
    "fileContent": "import {inject} from &quot;aurelia-framework&quot;;\r\nimport {HttpClient, json} from &#39;aurelia-fetch-client&#39;;\r\nimport &#39;fetch&#39;;\r\n\r\n@inject(HttpClient)\r\nexport class ContextBaseFetch {\r\n    apiName;\r\n    constructor(http) {\r\n        http.configure(config =&gt; {\r\n            config\r\n                .useStandardConfiguration()\r\n                .withBaseUrl(this.apiName);\r\n        });\r\n\r\n        this.http = http;\r\n    }\r\n    \r\n    getAll() {\r\n        return this.http.fetch(this.apiName)\r\n            .then(response =&gt; response.json())\r\n            .then(result =&gt; {return result});\r\n    }\r\n    getById(id) {\r\n        return this.http.fetch(this.apiName + &quot;/&quot; + id)\r\n            .then(response =&gt; response.json())\r\n            .then(result =&gt; { return result });\r\n    }\r\n    deleteByID(id) {\r\n        return this.http.fetch(this.apiName + &quot;/&quot; + id,\r\n            {\r\n                headers: { &quot;content-type&quot;: &quot;application/json; charset=utf-8&quot;},\r\n                method: &quot;DELETE&quot;\r\n            })\r\n            .then(response =&gt; response.json())\r\n            .then(result =&gt; { return result });      \r\n    }\r\n     deleteData(id, prodid) {\r\n        return this.http.fetch(this.apiName + &quot;/&quot;+ id +&quot;?prodid=&quot; + prodid,\r\n            {\r\n                headers: { &quot;content-type&quot;: &quot;application/json; charset=utf-8&quot;},\r\n                method: &quot;DELETE&quot;\r\n            })\r\n            .then(response =&gt; response.json())\r\n            .then(result =&gt; { return result });      \r\n    }\r\n    update(data,id) {\r\n       return this.http.fetch(this.apiName + &quot;/&quot; + id, {\r\n            headers: {&quot;content-type&quot;: &quot;application/json; charset=utf-8&quot;},\r\n            method: &quot;PUT&quot;,\r\n            body: json(data)\r\n            }).then(response =&gt; response.json())\r\n            .then(result =&gt; { return result });\r\n    }\r\n    save(data) {\r\n       return this.http.fetch(this.apiName + &quot;/&quot; , {\r\n            headers: { &quot;content-type&quot;: &quot;application/json; charset=utf-8&quot; },\r\n            method: &quot;POST&quot;,\r\n            body: json(data)\r\n        }).then(response =&gt; response.json())\r\n         .then(result =&gt; { return result });\r\n   }\r\n\r\n}",
    "group": "language-javascript"
  }
]