[
  {
    "id": 10,
    "accordionName": "accCustomerServerCode",
    "title": "Server View Model",
    "hrefName": "2054dfff-3ded-4d70-b4b1-e52446f03dfc",
    "href": "#2054dfff-3ded-4d70-b4b1-e52446f03dfc",
    "fileLocation": "Folder Models\\customerVm.cs; Models\\customerOrdersVm.cs",
    "fileContent": "using System.Collections.Generic;\r\n\r\nnamespace NWWebApi.Models\r\n{\r\n    public class customersManagerVM\r\n    {\r\n        public List&lt;customerVm&gt; customers { get; set; }\r\n        public List&lt;customerOrdersVm&gt; orders { get; set; }\r\n    }\r\n}\r\nnamespace NWWebApi.Models\r\n{\r\n    public class customerVm\r\n    {\r\n        public string customerID { get; set; }\r\n        public string companyName { get; set; }\r\n        public string contactName { get; set; }\r\n        public string contactTitle { get; set; }\r\n        public string address { get; set; }\r\n        public string city { get; set; }\r\n        public string region { get; set; }\r\n        public string postalCode { get; set; }\r\n        public string country { get; set; }\r\n        public string phone { get; set; }\r\n        public string fax { get; set; }\r\n    }\r\n}\r\nnamespace NWWebApi.Models\r\n{\r\n    public class customerOrdersVm\r\n    {\r\n        public string companyName { get; set; }\r\n        public string contactName { get; set; }\r\n        public string address { get; set; }\r\n        public string city { get; set; }\r\n        public string country { get; set; }\r\n        public string region { get; set; }\r\n        public string postalCode { get; set; }\r\n        public int orderID { get; set; }\r\n        public string customerID { get; set; }\r\n        public int? employeeID { get; set; }\r\n        public System.DateTime? orderDate { get; set; }\r\n        public System.DateTime? requiredDate { get; set; }\r\n        public System.DateTime? shippedDate { get; set; }\r\n        public int? shipVia { get; set; }\r\n        public decimal? freight { get; set; }\r\n        public string shipName { get; set; }\r\n        public string shipAddress { get; set; }\r\n        public string shipCity { get; set; }\r\n        public string shipRegion { get; set; }\r\n        public string shipPostalCode { get; set; }\r\n        public string shipCountry { get; set; }\r\n    }\r\n}",
    "group": "language-csharp"
  },
  {
    "id": 11,
    "accordionName": "accCustomerServerCode",
    "title": "Customers Controller",
    "hrefName": "bab5abf9-2750-4148-99c4-fc689e227c62",
    "href": "#bab5abf9-2750-4148-99c4-fc689e227c62",
    "fileLocation": "Folder Controllers\\CustomersApiController.cs",
    "fileContent": "using NWWebApi.Infrastructure;\r\nusing NWWebApi.Models;\r\nusing NWWebApi.Repository;\r\nusing System.Web.Http;\r\nusing System.Web.Http.Cors;\r\nusing System.Web.Http.Description;\r\n\r\nnamespace NWWebApi.Controllers\r\n{\r\n    [EnableCors(&quot;*&quot;, headers: &quot;*&quot;, methods: &quot;*&quot;)]\r\n    public class CustomersApiController : ApiController\r\n    {\r\n        private ICustomersRepository&lt;customerVm&gt; Repo;\r\n        public CustomersApiController()\r\n        {\r\n            Repo = new CustomersJsonRepository();\r\n        }\r\n        public CustomersApiController(ICustomersRepository&lt;customerVm&gt; _Repo)\r\n        {\r\n            Repo = _Repo;\r\n        }\r\n        [ResponseType(typeof(customersManagerVM))]\r\n        public customersManagerVM GetCustomers()\r\n        {\r\n            var customers = Repo.GetCustomers();\r\n            return customers;\r\n        }\r\n        [ResponseType(typeof(customerVm))]\r\n        public IHttpActionResult GetCustomer(string id)\r\n        {\r\n            var custVM = Repo.GetCustomer(id);\r\n\r\n            if ((custVM == null))\r\n            {\r\n                return NotFound();\r\n            }\r\n\r\n            return Ok(custVM);\r\n        }\r\n\r\n        // POST api/customers\r\n        [ResponseType(typeof(customerVm))]\r\n        public IHttpActionResult PostCustomer(customerVm customer)\r\n        {\r\n            if (!ModelState.IsValid)\r\n            {\r\n                return BadRequest(ModelState);\r\n            }\r\n\r\n            Repo.Add(customer);\r\n            Repo.Save();\r\n            return Ok(customer);\r\n\r\n        }\r\n\r\n        // PUT api/customers/5\r\n        [ResponseType(typeof(customerVm))]\r\n        public IHttpActionResult PutCustomer(string id, customerVm customer)\r\n        {\r\n            if (!ModelState.IsValid)\r\n            {\r\n                return BadRequest();\r\n            }\r\n                \r\n                Repo.Update(customer);\r\n                Repo.Save();\r\n            return Ok(customer);\r\n        }\r\n\r\n        // DELETE api/customers/5\r\n        [ResponseType(typeof(customerVm))]\r\n        public IHttpActionResult DeleteCustomer(string id)\r\n        {\r\n\r\n            var custVM = Repo.GetCustomer(id);\r\n\r\n            if (custVM == null)\r\n            {\r\n                return NotFound();\r\n            }\r\n            Repo.RemoveItem(custVM);\r\n            Repo.Save();\r\n            return Ok();\r\n        }\r\n    }\r\n}",
    "group": "language-csharp"
  },
  {
    "id": 12,
    "accordionName": "accCustomerServerCode",
    "title": "ICustomers Repository",
    "hrefName": "4b86c6bc-09a4-4f84-a393-ff514c7d0375",
    "href": "#4b86c6bc-09a4-4f84-a393-ff514c7d0375",
    "fileLocation": "Folder Infrastructure\\ICustomersRepository.cs",
    "fileContent": "using NWWebApi.Models;\r\nnamespace NWWebApi.Infrastructure\r\n{\r\n    public interface ICustomersRepository&lt;Items&gt; : IRepositoryBase&lt;customerVm&gt;\r\n    {\r\n        customersManagerVM GetCustomers();\r\n        customerVm GetCustomer(string id);\r\n    }\r\n}\r\nnamespace NWWebApi.Infrastructure\r\n{\r\n    public interface IRepositoryBase&lt;T&gt; where T : class\r\n    {\r\n        void Add(T Item);\r\n\r\n        void Update(T Item);\r\n\r\n        void RemoveItem(T Item);\r\n\r\n        void Save();\r\n    }\r\n}",
    "group": "language-csharp"
  },
  {
    "id": 13,
    "accordionName": "accCustomerServerCode",
    "title": "CustomersRepository",
    "hrefName": "1b26393c-53a9-4fc1-93cf-959c449bb993",
    "href": "#1b26393c-53a9-4fc1-93cf-959c449bb993",
    "fileLocation": "Folder RepositoryJson\\CustomersJsonRepository.cs",
    "fileContent": "using System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Web.Hosting;\r\nusing Newtonsoft.Json;\r\nusing NWWebApi.Models;\r\nusing NWWebApi.Infrastructure;\r\n\r\nnamespace NWWebApi.Repository\r\n{\r\n    public class CustomersJsonRepository : ICustomersRepository&lt;customerVm&gt;\r\n    {\r\n        private customersManagerVM db;\r\n        public CustomersJsonRepository()\r\n        {\r\n            db = Retrieve();\r\n        }\r\n        public customerVm GetCustomer(string id)\r\n        {\r\n            customerVm custVM = db.customers.Where(_cus =&gt; _cus.customerID == id).SingleOrDefault();\r\n            if ((custVM == null))\r\n            {\r\n                return null;\r\n            }\r\n            return custVM;\r\n        }\r\n\r\n        public customersManagerVM GetCustomers()\r\n        {\r\n            return db;\r\n        }\r\n\r\n        public void Add(customerVm Item)\r\n        {\r\n            db.customers.Add(Item);\r\n        }\r\n\r\n        public void RemoveItem(customerVm Item)\r\n        {\r\n            customerVm customer = db.customers.Where(cus =&gt; cus.customerID == Item.customerID).SingleOrDefault();\r\n            db.customers.Remove(customer);\r\n\r\n        }\r\n\r\n        public void Save()\r\n        {\r\n            WriteData(db.customers);\r\n        }\r\n\r\n        public void Update(customerVm Item)\r\n        {\r\n            customerVm cus = db.customers.Where(_cus =&gt; _cus.customerID == Item.customerID).SingleOrDefault();\r\n\r\n            cus.companyName = Item.companyName;\r\n            cus.contactName = Item.contactName;\r\n            cus.contactTitle = Item.contactTitle;\r\n            cus.address = Item.address;\r\n            cus.city = Item.city;\r\n            cus.region = Item.region;\r\n            cus.postalCode = Item.postalCode;\r\n            cus.country = Item.country;\r\n            cus.phone = Item.phone;\r\n            cus.fax = Item.fax;\r\n        }\r\n        private bool WriteData(List&lt;customerVm&gt; customers)\r\n        {\r\n            // Write out the Json\r\n            var filePath = HostingEnvironment.MapPath(&quot;~/App_Data/customers.json&quot;);\r\n\r\n            var json = JsonConvert.SerializeObject(customers, Formatting.Indented);\r\n            System.IO.File.WriteAllText(filePath, json);\r\n\r\n            return true;\r\n        }\r\n        internal customersManagerVM Retrieve()\r\n        {\r\n            var filePathCustomer = HostingEnvironment.MapPath(&quot;~/App_Data/customers.json&quot;);\r\n            var filePathOrders = HostingEnvironment.MapPath(&quot;~/App_Data/orders.json&quot;);\r\n\r\n            var jsonCustomer = System.IO.File.ReadAllText(filePathCustomer);\r\n            var jsonOrders = System.IO.File.ReadAllText(filePathOrders);\r\n\r\n            var customes = JsonConvert.DeserializeObject&lt;List&lt;customerVm&gt;&gt;(jsonCustomer);\r\n            var orders = JsonConvert.DeserializeObject&lt;List&lt;customerOrdersVm&gt;&gt;(jsonOrders);\r\n            customersManagerVM Results = new customersManagerVM();\r\n            Results.customers = customes;\r\n            Results.orders = orders;\r\n\r\n            return Results;\r\n        }\r\n    }\r\n}\r\n",
    "group": "language-csharp"
  }
]