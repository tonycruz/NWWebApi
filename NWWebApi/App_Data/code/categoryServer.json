[
  {
    "id": 10,
    "accordionName": "accCategoryMasterServerCode",
    "title": "Server View Models",
    "hrefName": "25fc0177-3933-4446-a349-de92bffa1982",
    "href": "#25fc0177-3933-4446-a349-de92bffa1982",
    "fileLocation": "Folder Models\\categoryVm.cs; Models\\productVm.cs",
    "fileContent": "namespace NWWebApi.Models\r\n{\r\n    public class categoryVm\r\n    {\r\n        public int categoryID { get; set; }\r\n        public string categoryName { get; set; }\r\n        public string description { get; set; }\r\n    }\r\n}\r\nnamespace NWWebApi.Models\r\n{\r\n    public class productVm\r\n    {\r\n        public int productID { get; set; }\r\n        public string productName { get; set; }\r\n        public int? supplierID { get; set; }\r\n        public int? categoryID { get; set; }\r\n        public string quantityPerUnit { get; set; }\r\n        public decimal? unitPrice { get; set; }\r\n        public short? unitsInStock { get; set; }\r\n        public short? unitsOnOrder { get; set; }\r\n        public short? reorderLevel { get; set; }\r\n        public bool discontinued { get; set; }\r\n    }\r\n}\r\nnamespace NWWebApi.Models\r\n{\r\n    public class CategoriesManagerVM\r\n    {\r\n        public List&lt;categoryVm&gt; categories { get; set; }\r\n        public List&lt;productVm&gt; products { get; set; }\r\n    }\r\n}",
    "group": "language-csharp"
  },
  {
    "id": 11,
    "accordionName": "accCategoryMasterServerCode",
    "title": "Categories Controller",
    "hrefName": "0200ee1e-a1ae-4860-84ab-4c4dd81088de",
    "href": "#0200ee1e-a1ae-4860-84ab-4c4dd81088de",
    "fileLocation": "Controllers\\CategoriesApiController.cs",
    "fileContent": "using NWWebApi.Infrastructure;\r\nusing NWWebApi.Models;\r\nusing NWWebApi.Repository;\r\nusing System.Web.Http;\r\nusing System.Web.Http.Cors;\r\nusing System.Web.Http.Description;\r\n\r\nnamespace NWWebApi.Controllers\r\n{\r\n    [EnableCors(&quot;*&quot;, headers: &quot;*&quot;, methods: &quot;*&quot;)]\r\n    public class CategoriesApiController : ApiController\r\n    {\r\n        private ICategoriesRepository&lt;categoryVm&gt; Repo;\r\n        public CategoriesApiController()\r\n        {\r\n            Repo = new CategoriesJsonRepository();\r\n        }\r\n        public CategoriesApiController(ICategoriesRepository&lt;categoryVm&gt; _Repo)\r\n        {\r\n            Repo = _Repo;\r\n        }\r\n\r\n        #region &quot;Categories&quot;\r\n        [ResponseType(typeof(CategoriesManagerVM))]\r\n        public CategoriesManagerVM GetCategories()\r\n        {\r\n            var categories = Repo.GetCategories();\r\n             return categories;\r\n        }\r\n        #endregion\r\n\r\n        #region &quot;Categories GetById &quot;\r\n        [ResponseType(typeof(categoryVm))]\r\n        public IHttpActionResult GetCategory(int id)\r\n        {\r\n            var Vm = Repo.GetCategory(id);\r\n            if ((Vm == null))\r\n            {\r\n                return NotFound();\r\n            }\r\n            return Ok(Vm);\r\n        }\r\n        #endregion\r\n\r\n        #region &quot;Categories Post&quot;\r\n        // POST api/CategoryVm\r\n        [ResponseType(typeof(categoryVm))]\r\n        public IHttpActionResult PostCategory(categoryVm vm)\r\n        {\r\n            if (!ModelState.IsValid)\r\n            {\r\n                return BadRequest(ModelState);\r\n            }\r\n\r\n            Repo.Add(vm);\r\n            Repo.Save();\r\n            return Ok(vm);\r\n        }\r\n        #endregion\r\n\r\n        #region &quot;Categories Put&quot;\r\n        // PUT api/Categories/5\r\n        [ResponseType(typeof(categoryVm))]\r\n        public IHttpActionResult Put(int id, categoryVm vm)\r\n        {\r\n            if (!ModelState.IsValid)\r\n            {\r\n                return BadRequest(ModelState);\r\n            }\r\n           // var Vm = Repo.GetCategory(id);\r\n            Repo.Update(vm);\r\n            Repo.Save();\r\n\r\n            return Ok(vm);\r\n        }\r\n        #endregion\r\n\r\n        #region &quot;Categories Put&quot;\r\n        //  DELETE api/Categories/5\r\n        [ResponseType(typeof(categoryVm))]\r\n        public IHttpActionResult Delete(int id)\r\n        {\r\n            var vmcategory = Repo.GetCategory(id);\r\n            if (vmcategory == null)\r\n            {\r\n                return NotFound();\r\n            }\r\n            Repo.RemoveItem(vmcategory);\r\n            Repo.Save();\r\n\r\n            return Ok(vmcategory);\r\n        }\r\n        #endregion\r\n\r\n\r\n        protected override void Dispose(bool disposing)\r\n        {\r\n            base.Dispose(disposing);\r\n        }\r\n\r\n    }\r\n}\r\n",
    "group": "language-csharp"
  },
  {
    "id": 12,
    "accordionName": "accCategoryMasterServerCode",
    "title": "ICategories Repository",
    "hrefName": "82fc16be-6794-47e1-8755-7b5a297d7705",
    "href": "#82fc16be-6794-47e1-8755-7b5a297d7705",
    "fileLocation": "Folder Infrastructure\\ICategoriesRepository.cs",
    "fileContent": "using NWWebApi.Models;\r\n\r\nnamespace NWWebApi.Infrastructure\r\n{\r\n    public interface ICategoriesRepository&lt;Items&gt; : IRepositoryBase&lt;categoryVm&gt;\r\n    {\r\n\r\n        CategoriesManagerVM GetCategories();\r\n        categoryVm GetCategory(int id);\r\n\r\n    }\r\n}\r\nnamespace NWWebApi.Infrastructure\r\n{\r\n    public interface IRepositoryBase&lt;T&gt; where T : class\r\n    {\r\n        void Add(T Item);\r\n\r\n        void Update(T Item);\r\n\r\n        void RemoveItem(T Item);\r\n\r\n        void Save();\r\n    }\r\n   \r\n}",
    "group": "language-csharp"
  },
  {
    "id": 13,
    "accordionName": "accCategoryMasterServerCode",
    "title": "Categories Repository",
    "hrefName": "7d19df66-bbac-4972-bed4-8807817c7e72",
    "href": "#7d19df66-bbac-4972-bed4-8807817c7e72",
    "fileLocation": "RepositoryJson\\CategoriesJsonRepository.cs",
    "fileContent": "using Newtonsoft.Json;\r\nusing NWWebApi.Infrastructure;\r\nusing NWWebApi.Models;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Web.Hosting;\r\n\r\nnamespace NWWebApi.Repository\r\n{\r\n    public class CategoriesJsonRepository : ICategoriesRepository&lt;categoryVm&gt;\r\n    {\r\n        private CategoriesManagerVM db;\r\n        public CategoriesJsonRepository(){\r\n            db = Retrieve();\r\n        }\r\n        public CategoriesManagerVM GetCategories()\r\n        {\r\n            var results = Retrieve();\r\n            return db;\r\n        }\r\n\r\n        public categoryVm GetCategory(int id)\r\n        {\r\n            \r\n            categoryVm Vm = db.categories.Where(_Cat =&gt; _Cat.categoryID == id).SingleOrDefault();\r\n\r\n            if ((Vm == null))\r\n            {\r\n                return null;\r\n            }\r\n\r\n            return Vm;\r\n        }\r\n\r\n        public void Add(categoryVm Item)\r\n        {\r\n            var newID = db.categories.Max(c =&gt; c.categoryID) + 1;\r\n            Item.categoryID = newID;\r\n            db.categories.Add(Item);\r\n        }\r\n\r\n        public void RemoveItem(categoryVm Item)\r\n        {\r\n            categoryVm Vm = db.categories.Where(_Cat =&gt; _Cat.categoryID == Item.categoryID).SingleOrDefault();\r\n            db.categories.Remove(Vm);\r\n        }\r\n\r\n\r\n\r\n        public void Save()\r\n        {\r\n            WriteData(db.categories);\r\n        }\r\n\r\n\r\n\r\n        public void Update(categoryVm Item)\r\n        {\r\n            categoryVm Vm = db.categories.Where(_Cat =&gt; _Cat.categoryID == Item.categoryID).SingleOrDefault();\r\n            Vm.categoryName = Item.categoryName;\r\n            Vm.description = Item.description;\r\n        }\r\n\r\n        private bool WriteData(List&lt;categoryVm&gt; categories)\r\n        {\r\n            // Write out the Json\r\n            var filePath = HostingEnvironment.MapPath(&quot;~/App_Data/categories.json&quot;);\r\n\r\n            var json = JsonConvert.SerializeObject(categories, Formatting.Indented);\r\n            System.IO.File.WriteAllText(filePath, json);\r\n\r\n            return true;\r\n        }\r\n        internal CategoriesManagerVM Retrieve()\r\n        {\r\n            var filePathCategories = HostingEnvironment.MapPath(&quot;~/App_Data/categories.json&quot;);\r\n            var filePathProducts = HostingEnvironment.MapPath(&quot;~/App_Data/products.json&quot;);\r\n\r\n            var jsonCategories = System.IO.File.ReadAllText(filePathCategories);\r\n            var jsonProducts = System.IO.File.ReadAllText(filePathProducts);\r\n\r\n            var categories = JsonConvert.DeserializeObject&lt;List&lt;categoryVm&gt;&gt;(jsonCategories);\r\n            var products = JsonConvert.DeserializeObject&lt;List&lt;productVm&gt;&gt;(jsonProducts);\r\n\r\n            CategoriesManagerVM results = new CategoriesManagerVM();\r\n\r\n            results.categories = categories;\r\n            results.products = products;\r\n            return results;\r\n        }\r\n    }\r\n}",
    "group": "language-csharp"
  }
]