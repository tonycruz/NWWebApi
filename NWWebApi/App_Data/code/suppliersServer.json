[
  {
    "id": 0,
    "accordionName": "accSupplierServerCode",
    "title": "Server View Model",
    "hrefName": "f1101a47-c239-4014-a08e-baf2ffe22c0d",
    "href": "#f1101a47-c239-4014-a08e-baf2ffe22c0d",
    "fileLocation": "Folder \\Models",
    "fileContent": "using System.Collections.Generic;\n\nnamespace NWWebApi.Models\n{\n    public class SuppliersManagerVM\n    {\n        public List&lt;productVm&gt; products { get; set; }\n        public List&lt;supplierVm&gt; suppliers { get; set; }\n    }\n}\nnamespace NWWebApi.Models\n{\n    public class supplierVm\n    {\n        public int supplierID { get; set; }\n        public string companyName { get; set; }\n        public string contactName { get; set; }\n        public string contactTitle { get; set; }\n        public string address { get; set; }\n        public string city { get; set; }\n        public string region { get; set; }\n        public string postalCode { get; set; }\n        public string country { get; set; }\n        public string phone { get; set; }\n        public string fax { get; set; }\n        public string homePage { get; set; }\n    }\n}\nnamespace NWWebApi.Models\n{\n    public class productVm\n    {\n        public int productID { get; set; }\n        public string productName { get; set; }\n        public int? supplierID { get; set; }\n        public int? categoryID { get; set; }\n        public string quantityPerUnit { get; set; }\n        public decimal? unitPrice { get; set; }\n        public short? unitsInStock { get; set; }\n        public short? unitsOnOrder { get; set; }\n        public short? reorderLevel { get; set; }\n        public bool discontinued { get; set; }\n    }\n}",
    "group": "language-csharp"
  },
  {
    "id": 1,
    "accordionName": "accSupplierServerCode",
    "title": "Suppliers Controller",
    "hrefName": "464817a6-001e-47b1-8fcb-a03f5668327d",
    "href": "#464817a6-001e-47b1-8fcb-a03f5668327d",
    "fileLocation": "Folder \\Controllers",
    "fileContent": "using NWWebApi.Infrastructure;\nusing NWWebApi.Models;\nusing NWWebApi.Repository;\nusing System.Net;\nusing System.Web.Http;\nusing System.Web.Http.Cors;\nusing System.Web.Http.Description;\n\nnamespace NWWebApi.Controllers\n{\n    [EnableCors(&quot;*&quot;, headers: &quot;*&quot;, methods: &quot;*&quot;)]\n    public class SuppliersApiController : ApiController\n    {\n        private ISuppliersRepository&lt;supplierVm&gt; Repo;\n        public SuppliersApiController()\n        {\n            Repo = new SuppliersJsonRepository();\n        }\n        public SuppliersApiController(ISuppliersRepository&lt;supplierVm&gt; _Repo)\n        {\n            Repo = _Repo;\n        }\n\n        #region &quot;Suppliers&quot;\n        [ResponseType(typeof(SuppliersManagerVM))]\n        public SuppliersManagerVM GetSuppliers()\n        {\n            var suppliers = Repo.GetSuppliers();\n            return suppliers;\n        }\n        #endregion\n\n        #region &quot;Suppliers Get By Id &quot;\n        [ResponseType(typeof(supplierVm))]\n        public IHttpActionResult GetSupplier(int id)\n        {\n            var Vm = Repo.GetSupplier(id);\n            if ((Vm == null))\n            {\n                return NotFound();\n            }\n            return Ok(Vm);\n        }\n        #endregion\n\n        #region &quot;Suppliers Post&quot;\n        // POST api/SupplierVm\n        [ResponseType(typeof(supplierVm))]\n        public IHttpActionResult PostSupplier(supplierVm vm)\n        {\n            if (!ModelState.IsValid)\n            {\n                return BadRequest(ModelState);\n            }\n\n            Repo.Add(vm);\n            Repo.Save();\n            return CreatedAtRoute(&quot;DefaultApi&quot;, new { id = vm.supplierID }, vm);\n        }\n        #endregion\n\n        #region &quot;Suppliers Put&quot;\n        // PUT api/Suppliers/5\n        [ResponseType(typeof(supplierVm))]\n        public IHttpActionResult PutSupplier(int id, supplierVm vm)\n        {\n            if (!ModelState.IsValid)\n            {\n                return BadRequest(ModelState);\n            }\n            if (!(id == vm.supplierID))\n            {\n                return BadRequest();\n            }\n            Repo.Update(vm);\n            Repo.Save();\n                     \n            return StatusCode(HttpStatusCode.NoContent);\n        }\n        #endregion\n\n        #region &quot;Suppliers Put&quot;\n        //  DELETE api/Suppliers/5\n        [ResponseType(typeof(supplierVm))]\n        public IHttpActionResult DeleteSupplier(int id)\n        {\n            var vm = Repo.GetSupplier(id);\n            if (vm == null)\n            {\n                return NotFound();\n            }\n            Repo.RemoveItem(vm);\n            Repo.Save();\n            return Ok(vm);\n        }\n        #endregion\n        protected override void Dispose(bool disposing)\n        {\n            base.Dispose(disposing);\n        }\n\n    }\n}",
    "group": "language-csharp"
  },
  {
    "id": 2,
    "accordionName": "accSupplierServerCode",
    "title": "ISuppliers Repository",
    "hrefName": "ab5e6f5c-1408-4335-b25b-b203d8db878f",
    "href": "#ab5e6f5c-1408-4335-b25b-b203d8db878f",
    "fileLocation": "Folder \\Infrastructure",
    "fileContent": "using NWWebApi.Models;\n\nnamespace NWWebApi.Infrastructure\n{\n    public interface ISuppliersRepository&lt;Items&gt; : IRepositoryBase&lt;supplierVm&gt;\n    {\n\n        SuppliersManagerVM GetSuppliers();\n        supplierVm GetSupplier(int id);\n\n    }\n}\nnamespace NWWebApi.Infrastructure\n{\n    public interface IRepositoryBase&lt;T&gt; where T : class\n    {\n        void Add(T Item);\n\n        void Update(T Item);\n\n        void RemoveItem(T Item);\n\n        void Save();\n    }\n}",
    "group": "language-csharp"
  },
  {
    "id": 3,
    "accordionName": "accSupplierServerCode",
    "title": "Suppliers Repository",
    "hrefName": "8ef42a43-e9e9-40ab-98fd-3dd0453a77b0",
    "href": "#8ef42a43-e9e9-40ab-98fd-3dd0453a77b0",
    "fileLocation": "Folder \\RepositoryJson\\SuppliersJsonRepository.cs",
    "fileContent": "using System.Web.Hosting;\nusing Newtonsoft.Json;\nusing NWWebApi.Models;\nusing NWWebApi.Infrastructure;\nusing System.Collections.Generic;\n\nnamespace NWWebApi.Repository\n{\n    public class SuppliersJsonRepository : ISuppliersRepository&lt;supplierVm&gt;\n    {\n        private SuppliersManagerVM db;\n        public SuppliersJsonRepository()\n        {\n            db = Retrieve();\n        }\n        public SuppliersManagerVM GetSuppliers()\n        {\n            return db;\n        }\n\n        public supplierVm GetSupplier(int id)\n        {\n            supplierVm result = db.suppliers.Where(_Sup =&gt; _Sup.supplierID == id).SingleOrDefault();\n\n            if ((result == null))\n            {\n                return null;\n            }\n            return result;\n        }\n\n        public void Add(supplierVm Item)\n        {\n            var newID = db.suppliers.Max(s=&gt; s.supplierID) +1;\n            Item.supplierID = newID;\n            db.suppliers.Add(Item);\n        }\n\n        public void RemoveItem(supplierVm Item)\n        {\n            supplierVm result = db.suppliers.Where(_Sup =&gt; _Sup.supplierID == Item.supplierID).SingleOrDefault();\n            db.suppliers.Remove(result);\n        }\n\n\n        public void Save()\n        {\n            WriteData(db.suppliers);\n        }\n\n\n        public void Update(supplierVm Item)\n        {\n            supplierVm result = db.suppliers.Where(_Sup =&gt; _Sup.supplierID == Item.supplierID).SingleOrDefault();\n            result.supplierID = Item.supplierID;\n            result.companyName = Item.companyName;\n            result.contactName = Item.contactName;\n            result.contactTitle = Item.contactTitle;\n            result.address = Item.address;\n            result.city = Item.city;\n            result.region = Item.region;\n            result.postalCode = Item.postalCode;\n            result.country = Item.country;\n            result.phone = Item.phone;\n            result.fax = Item.fax;\n            result.homePage = Item.homePage;\n        }\n        private bool WriteData(List&lt;supplierVm&gt; suppliers)\n        {\n            // Write out the Json\n            var filePath = HostingEnvironment.MapPath(&quot;~/App_Data/suppliers.json&quot;);\n\n            var json = JsonConvert.SerializeObject(suppliers, Formatting.Indented);\n            System.IO.File.WriteAllText(filePath, json);\n\n            return true;\n        }\n        internal SuppliersManagerVM Retrieve()\n        {\n            var filePathSuppliers = HostingEnvironment.MapPath(&quot;~/App_Data/suppliers.json&quot;);\n            var filePathProducts = HostingEnvironment.MapPath(&quot;~/App_Data/products.json&quot;);\n\n            var jsonSuppliers = System.IO.File.ReadAllText(filePathSuppliers);\n            var jsonProducts = System.IO.File.ReadAllText(filePathProducts);\n\n            var suppliers = JsonConvert.DeserializeObject&lt;List&lt;supplierVm&gt;&gt;(jsonSuppliers);\n            var products = JsonConvert.DeserializeObject&lt;List&lt;productVm&gt;&gt;(jsonProducts);\n            SuppliersManagerVM results = new SuppliersManagerVM();\n            results.suppliers = suppliers;\n            results.products = products;\n            \n            return results;\n        }\n    }",
    "group": "language-csharp"
  }
]