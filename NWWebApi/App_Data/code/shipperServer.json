[
  {
    "id": 0,
    "accordionName": "accShipperServerCode",
    "title": "Server View Model",
    "hrefName": "e0cffef2-9234-45de-8c36-4e442c537ae1",
    "href": "#e0cffef2-9234-45de-8c36-4e442c537ae1",
    "fileLocation": "Folder \\Models",
    "fileContent": "using System.Collections.Generic;\n\nnamespace NWWebApi.Models\n{\n    public class shippersManagerVM\n    {\n        public List&lt;shipperVm&gt; shippers { get; set; }\n        public List&lt;customerOrdersVm&gt; orders { get; set; }\n    }\n}\nnamespace NWWebApi.Models\n{\n    public class shipperVm\n    {\n        public int shipperID { get; set; }\n        public string companyName { get; set; }\n        public string phone { get; set; }\n    }\n}\nnamespace NWWebApi.Models\n{\n    public class customerOrdersVm\n    {\n        public string companyName { get; set; }\n        public string contactName { get; set; }\n        public string address { get; set; }\n        public string city { get; set; }\n        public string country { get; set; }\n        public string region { get; set; }\n        public string postalCode { get; set; }\n        public int orderID { get; set; }\n        public string customerID { get; set; }\n        public int? employeeID { get; set; }\n        public System.DateTime? orderDate { get; set; }\n        public System.DateTime? requiredDate { get; set; }\n        public System.DateTime? shippedDate { get; set; }\n        public int? shipVia { get; set; }\n        public decimal? freight { get; set; }\n        public string shipName { get; set; }\n        public string shipAddress { get; set; }\n        public string shipCity { get; set; }\n        public string shipRegion { get; set; }\n        public string shipPostalCode { get; set; }\n        public string shipCountry { get; set; }\n    }\n}",
    "group": "language-csharp"
  },
  {
    "id": 1,
    "accordionName": "accShipperServerCode",
    "title": "Shippers Controller",
    "hrefName": "abee1683-cc83-4f25-9cbc-fe0aa10c556c",
    "href": "#abee1683-cc83-4f25-9cbc-fe0aa10c556c",
    "fileLocation": "Folder \\Controllers",
    "fileContent": "using NWWebApi.Infrastructure;\nusing NWWebApi.Models;\nusing NWWebApi.Repository;\nusing System.Web.Http;\nusing System.Web.Http.Cors;\nusing System.Web.Http.Description;\n\nnamespace NWWebApi.Controllers\n{\n    [EnableCors(&quot;*&quot;, headers: &quot;*&quot;, methods: &quot;*&quot;)]\n    public class ShippersApiController : ApiController\n    {\n        private IShippersRepository&lt;shipperVm&gt; Repo;\n        public ShippersApiController()\n        {\n            Repo = new ShippersJsonRepository();\n        }\n        public ShippersApiController(IShippersRepository&lt;shipperVm&gt; _Repo)\n        {\n            Repo = _Repo;\n        }\n\n        #region &quot;Shippers&quot;\n        [ResponseType(typeof(shippersManagerVM))]\n        public shippersManagerVM GetShippers()\n        {\n            var shippers = Repo.GetShippers();\n            return shippers;\n        }\n        #endregion\n\n        #region &quot;Shippers Get By Id &quot;\n        [ResponseType(typeof(shipperVm))]\n        public IHttpActionResult GetShipper(int id)\n        {\n            var Vm = Repo.GetShipper(id);\n            if ((Vm == null))\n            {\n                return NotFound();\n            }\n            return Ok(Vm);\n        }\n        #endregion\n\n        #region &quot;Shippers Post&quot;\n        // POST api/ShipperVm\n        [ResponseType(typeof(shipperVm))]\n        public IHttpActionResult PostShipper(shipperVm vm)\n        {\n            if (!ModelState.IsValid)\n            {\n                return BadRequest(ModelState);\n            }\n\n            Repo.Add(vm);\n            Repo.Save();\n            return Ok(vm);\n        }\n        #endregion\n\n        #region &quot;Shippers Put&quot;\n        // PUT api/Shippers/5\n        [ResponseType(typeof(shipperVm))]\n        public IHttpActionResult PutShipper(int id, shipperVm vm)\n        {\n            if (!ModelState.IsValid)\n            {\n                return BadRequest(ModelState);\n            }\n            if (!(id == vm.shipperID))\n            {\n                return BadRequest();\n            }\n          \n                Repo.Update(vm);\n                Repo.Save();\n            return Ok(vm);\n        }\n        #endregion\n\n        #region &quot;Shippers Put&quot;\n        //  DELETE api/Shippers/5\n        [ResponseType(typeof(shipperVm))]\n        public IHttpActionResult DeleteShipper(int id)\n        {\n            var vm = Repo.GetShipper(id);\n            if (vm == null)\n            {\n                return NotFound();\n            }\n            Repo.RemoveItem(vm);\n            Repo.Save();\n            return Ok(vm);\n        }\n        #endregion\n        protected override void Dispose(bool disposing)\n        {\n            base.Dispose(disposing);\n        }\n    }\n}",
    "group": "language-csharp"
  },
  {
    "id": 2,
    "accordionName": "accShipperServerCode",
    "title": "IRepository",
    "hrefName": "ec6df61c-39a1-4a03-ba7e-b376a1279e2d",
    "href": "#ec6df61c-39a1-4a03-ba7e-b376a1279e2d",
    "fileLocation": "Folder \\Infrastructure",
    "fileContent": "using NWWebApi.Models;\n\nnamespace NWWebApi.Infrastructure\n{\n    public interface IShippersRepository&lt;Items&gt; : IRepositoryBase&lt;shipperVm&gt;\n    {\n\n        shippersManagerVM GetShippers();\n        shipperVm GetShipper(int id);\n\n    }\n}\nnamespace NWWebApi.Infrastructure\n{\n    public interface IRepositoryBase&lt;T&gt; where T : class\n    {\n        void Add(T Item);\n\n        void Update(T Item);\n\n        void RemoveItem(T Item);\n\n        void Save();\n    }\n}",
    "group": "language-csharp"
  },
  {
    "id": 3,
    "accordionName": "accShipperServerCode",
    "title": "Repository",
    "hrefName": "23353c98-ade1-4a1c-9bb2-50973f71c1fa",
    "href": "#23353c98-ade1-4a1c-9bb2-50973f71c1fa",
    "fileLocation": "Folder \\Repository",
    "fileContent": " using System.Collections.Generic;\nusing System.Linq;\nusing System.Web.Hosting;\nusing Newtonsoft.Json;\nusing NWWebApi.Infrastructure;\nusing NWWebApi.Models;\nnamespace NWWebApi.Repository\n{\n    public class ShippersJsonRepository : IShippersRepository&lt;shipperVm&gt;\n    {\n        private shippersManagerVM db;\n        public ShippersJsonRepository()\n        {\n            db = Retrieve();\n        }\n        public shippersManagerVM GetShippers()\n        {\n            return db;\n        }\n\n        public shipperVm GetShipper(int id)\n        {\n            shipperVm result = db.shippers.Where(_Shi =&gt; _Shi.shipperID == id).SingleOrDefault();\n\n            if ((result == null))\n            {\n                return null;\n            }\n\n            return result;\n        }\n\n        public void Add(shipperVm Item)\n        {\n            var newID = db.shippers.Max(s =&gt; s.shipperID) + 1;\n            Item.shipperID = newID;\n            db.shippers.Add(Item);\n        }\n\n        public void RemoveItem(shipperVm Item)\n        {\n            db.shippers.Remove(Item);\n        }\n\n\n        public void Save()\n        {\n            WriteData(db.shippers);\n        }\n\n\n        public void Update(shipperVm Item)\n        {\n            shipperVm result = db.shippers.Where(_Shi =&gt; _Shi.shipperID == Item.shipperID).SingleOrDefault();\n            result.shipperID = Item.shipperID;\n            result.companyName = Item.companyName;\n            result.phone = Item.phone;\n        }\n        private bool WriteData(List&lt;shipperVm&gt; shippers)\n        {\n            // Write out the Json\n            var filePath = HostingEnvironment.MapPath(&quot;~/App_Data/shippers.json&quot;);\n\n            var json = JsonConvert.SerializeObject(shippers, Formatting.Indented);\n            System.IO.File.WriteAllText(filePath, json);\n\n            return true;\n        }\n        internal shippersManagerVM Retrieve()\n        {\n            var filePathShippers = HostingEnvironment.MapPath(&quot;~/App_Data/shippers.json&quot;);\n            var filePathOrders = HostingEnvironment.MapPath(&quot;~/App_Data/orders.json&quot;);\n\n            var jsonShippers = System.IO.File.ReadAllText(filePathShippers);\n            var jsonOrders = System.IO.File.ReadAllText(filePathOrders);\n\n            var shippers = JsonConvert.DeserializeObject&lt;List&lt;shipperVm&gt;&gt;(jsonShippers);\n            var orders = JsonConvert.DeserializeObject&lt;List&lt;customerOrdersVm&gt;&gt;(jsonOrders);\n            shippersManagerVM results = new shippersManagerVM();\n            results.shippers = shippers;\n            results.orders = orders;\n            return results;\n        }\n\n    }\n}",
    "group": "language-csharp"
  }
]