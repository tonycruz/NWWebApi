[
  {
    "id": 0,
    "accordionName": "accOrderServerCode",
    "title": "View Model customer Orders ",
    "hrefName": "69118198-2cbf-415e-90c0-6784896690b6",
    "href": "#69118198-2cbf-415e-90c0-6784896690b6",
    "fileLocation": "Folder \\Models\\",
    "fileContent": "  using System.Collections.Generic;\r\n\r\nnamespace NWWebApi.Models\r\n{\r\n    public class CustomerOrderManagerVM\r\n    {\r\n        public List<customerOrdersVm> orders { get; set; }\r\n        public List<order_DetailVm> orderDetails { get; set; }\r\n    }\r\n    public class OrderManagerVM\r\n    {\r\n        public List<customerOrdersVm> orders { get; set; }\r\n        public List<order_DetailVm> orderDetails { get; set; }\r\n        public List<productVm> products { get; set; }\r\n        public List<customerVm> customers { get; set; }\r\n    }\r\n}\r\nnamespace NWWebApi.Models\r\n{\r\n    public class customerOrdersVm\r\n    {\r\n        public string companyName { get; set; }\r\n        public string contactName { get; set; }\r\n        public string address { get; set; }\r\n        public string city { get; set; }\r\n        public string country { get; set; }\r\n        public string region { get; set; }\r\n        public string postalCode { get; set; }\r\n        public int orderID { get; set; }\r\n        public string customerID { get; set; }\r\n        public int? employeeID { get; set; }\r\n        public System.DateTime? orderDate { get; set; }\r\n        public System.DateTime? requiredDate { get; set; }\r\n        public System.DateTime? shippedDate { get; set; }\r\n        public int? shipVia { get; set; }\r\n        public decimal? freight { get; set; }\r\n        public string shipName { get; set; }\r\n        public string shipAddress { get; set; }\r\n        public string shipCity { get; set; }\r\n        public string shipRegion { get; set; }\r\n        public string shipPostalCode { get; set; }\r\n        public string shipCountry { get; set; }\r\n    }\r\n}\r\nnamespace NWWebApi.Models\r\n{\r\n    public class order_DetailVm\r\n    {\r\n        public int? orderID { get; set; }\r\n        public int? productID { get; set; }\r\n        public string productName { get; set; }\r\n        public decimal? unitPrice { get; set; }\r\n        public short? quantity { get; set; }\r\n        public float? discount { get; set; }\r\n        public decimal? extendedPrice { get; set; }\r\n    }\r\n}\r\n\r\nnamespace NWWebApi.Models\r\n{\r\n    public class productVm\r\n    {\r\n        public int productID { get; set; }\r\n        public string productName { get; set; }\r\n        public int? supplierID { get; set; }\r\n        public int? categoryID { get; set; }\r\n        public string quantityPerUnit { get; set; }\r\n        public decimal? unitPrice { get; set; }\r\n        public short? unitsInStock { get; set; }\r\n        public short? unitsOnOrder { get; set; }\r\n        public short? reorderLevel { get; set; }\r\n        public bool discontinued { get; set; }\r\n    }\r\n}\r\nnamespace NWWebApi.Models\r\n{\r\n    public class customerVm\r\n    {\r\n        public string customerID { get; set; }\r\n        public string companyName { get; set; }\r\n        public string contactName { get; set; }\r\n        public string contactTitle { get; set; }\r\n        public string address { get; set; }\r\n        public string city { get; set; }\r\n        public string region { get; set; }\r\n        public string postalCode { get; set; }\r\n        public string country { get; set; }\r\n        public string phone { get; set; }\r\n        public string fax { get; set; }\r\n    }\r\n}",
    "group": "language-csharp"
  },
  {
    "id": 1,
    "accordionName": "accOrderServerCode",
    "title": "Orders Controller",
    "hrefName": "c468711f-21f6-4fcf-8ce1-fd739a9baa61",
    "href": "#c468711f-21f6-4fcf-8ce1-fd739a9baa61",
    "fileLocation": "Folder \\Controllers",
    "fileContent": "using NWWebApi.Infrastructure;\r\nusing NWWebApi.Models;\r\nusing NWWebApi.Repository;\r\nusing System.Net;\r\nusing System.Web.Http;\r\nusing System.Web.Http.Cors;\r\nusing System.Web.Http.Description;\r\n\r\nnamespace NWWebApi.Controllers\r\n{\r\n    [EnableCors(&quot;*&quot;, headers: &quot;*&quot;, methods: &quot;*&quot;)]\r\n    public class OrdersAddApiController : ApiController\r\n    {\r\n        private IOrderAddRepository&lt;customerOrdersVm&gt; Repo;\r\n        public OrdersAddApiController()\r\n        {\r\n            Repo = new OrdersAddJsonRepository();\r\n        }\r\n       \r\n        #region &quot;Orders&quot;\r\n        [ResponseType(typeof(CustomerOrderManagerVM))]\r\n        public OrderManagerVM GetOrders()\r\n        {\r\n            var orders = Repo.GetOrders();\r\n            return orders;\r\n        }\r\n        #endregion\r\n\r\n        #region &quot;Orders Get By Id &quot;\r\n        [ResponseType(typeof(customerOrdersVm))]\r\n        public IHttpActionResult GetOrder(int id)\r\n        {\r\n            var Vm = Repo.GetOrder(id);\r\n            if ((Vm == null))\r\n            {\r\n                return NotFound();\r\n            }\r\n            return Ok(Vm);\r\n        }\r\n        #endregion\r\n\r\n        #region &quot;Orders Post&quot;\r\n        // POST api/OrderVm\r\n        [ResponseType(typeof(customerOrdersVm))]\r\n        public IHttpActionResult PostOrder(customerOrdersVm vm)\r\n        {\r\n            if (!ModelState.IsValid)\r\n            {\r\n                return BadRequest(ModelState);\r\n            }\r\n\r\n            Repo.Add(vm);\r\n            Repo.Save();\r\n            return CreatedAtRoute(&quot;DefaultApi&quot;, new { id = vm.orderID }, vm);\r\n        }\r\n        #endregion\r\n\r\n        #region &quot;Orders Put&quot;\r\n        // PUT api/Orders/5\r\n        [ResponseType(typeof(customerOrdersVm))]\r\n        public IHttpActionResult PutOrder(int id, customerOrdersVm vm)\r\n        {\r\n            if (!ModelState.IsValid)\r\n            {\r\n                return BadRequest(ModelState);\r\n            }\r\n            if (!(id == vm.orderID))\r\n            {\r\n                return BadRequest();\r\n            }\r\n          \r\n                Repo.Update(vm);\r\n                Repo.Save();\r\n                return StatusCode(HttpStatusCode.NoContent);\r\n        }\r\n        #endregion\r\n\r\n        #region &quot;Orders Put&quot;\r\n        //  DELETE api/Orders/5\r\n        [ResponseType(typeof(customerOrdersVm))]\r\n        public IHttpActionResult DeleteOrder(int id)\r\n        {\r\n            var vm = Repo.GetOrder(id);\r\n            if (vm == null)\r\n            {\r\n                return NotFound();\r\n            }\r\n            Repo.RemoveItem(vm);\r\n            Repo.Save();\r\n            return Ok(vm);\r\n        }\r\n        #endregion\r\n\r\n        protected override void Dispose(bool disposing)\r\n        {\r\n            base.Dispose(disposing);\r\n        }\r\n\r\n    }\r\n}",
    "group": "language-csharp"
  },
  {
    "id": 2,
    "accordionName": "accOrderServerCode",
    "title": "IOrderAdd Repository",
    "hrefName": "296ccf06-7a92-4984-b91b-c788a55a89ab",
    "href": "#296ccf06-7a92-4984-b91b-c788a55a89ab",
    "fileLocation": "Folder \\Infrastructure",
    "fileContent": "using NWWebApi.Models;\r\n\r\nnamespace NWWebApi.Infrastructure\r\n{\r\n    interface IOrderAddRepository &lt;Items&gt; : IRepositoryBase&lt;customerOrdersVm&gt;\r\n    {\r\n        OrderManagerVM GetOrders();\r\n        customerOrdersVm GetOrder(int id);\r\n    }\r\n}\r\n\r\nnamespace NWWebApi.Infrastructure\r\n{\r\n    public interface IRepositoryBase&lt;T&gt; where T : class\r\n    {\r\n        void Add(T Item);\r\n\r\n        void Update(T Item);\r\n\r\n        void RemoveItem(T Item);\r\n\r\n        void Save();\r\n    }\r\n}\r\n",
    "group": "language-csharp"
  },
  {
    "id": 3,
    "accordionName": "accOrderServerCode",
    "title": "OrdersAdd Repository",
    "hrefName": "6d148d7a-914f-4822-b0cb-b10201b14e29",
    "href": "#6d148d7a-914f-4822-b0cb-b10201b14e29",
    "fileLocation": "Folder \\Repository",
    "fileContent": "using Newtonsoft.Json;\r\nusing NWWebApi.Infrastructure;\r\nusing NWWebApi.Models;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Web.Hosting;\r\n\r\nnamespace NWWebApi.Repository\r\n{\r\n    public class OrdersAddJsonRepository :IOrderAddRepository&lt;customerOrdersVm&gt;\r\n    {\r\n        private OrderManagerVM db;\r\n        public OrdersAddJsonRepository()\r\n        {\r\n            db = Retrieve();\r\n        }\r\n        public customerOrdersVm GetOrder(int id)\r\n        {\r\n            customerOrdersVm Vm = db.orders.Where(_Ord =&gt; _Ord.orderID == id).SingleOrDefault();\r\n\r\n            if ((Vm == null))\r\n            {\r\n                return null;\r\n            }\r\n\r\n            return Vm;\r\n        }\r\n\r\n        public OrderManagerVM GetOrders()\r\n        {\r\n            return db;\r\n        }\r\n\r\n        public void Add(customerOrdersVm Item)\r\n        {\r\n            var newID = db.orders.Max(o =&gt; o.orderID) + 1;\r\n            Item.orderID = newID;\r\n            db.orders.Add(Item);\r\n        }\r\n\r\n        public void RemoveItem(customerOrdersVm Item)\r\n        {\r\n            customerOrdersVm Vm = db.orders.Where(_Ord =&gt; _Ord.orderID == Item.orderID).SingleOrDefault();\r\n            db.orders.Remove(Vm);\r\n        }\r\n\r\n        public void Save()\r\n        {\r\n            WriteData(db.orders);\r\n        }\r\n        public void Update(customerOrdersVm Ord)\r\n        {\r\n            customerOrdersVm result = db.orders.Where(_Ord =&gt; _Ord.orderID == Ord.orderID).SingleOrDefault();\r\n            var Order = result;\r\n            Order.customerID = Ord.customerID;\r\n            Order.companyName = Ord.companyName;\r\n            Order.contactName = Ord.contactName;\r\n            Order.address = Ord.address;\r\n            Order.region = Ord.region;\r\n            Order.postalCode = Ord.postalCode;\r\n            Order.city = Ord.city;\r\n            Order.country = Ord.country;\r\n            Order.employeeID = Ord.employeeID;\r\n            Order.orderDate = Ord.orderDate;\r\n            Order.requiredDate = Ord.requiredDate;\r\n            Order.shippedDate = Ord.shippedDate;\r\n            Order.shipVia = Ord.shipVia;\r\n            Order.freight = Ord.freight;\r\n            Order.shipName = Ord.shipName;\r\n            Order.shipAddress = Ord.shipAddress;\r\n            Order.shipCity = Ord.shipCity;\r\n            Order.shipRegion = Ord.shipRegion;\r\n            Order.shipPostalCode = Ord.shipPostalCode;\r\n\r\n        }\r\n        private bool WriteData(List&lt;customerOrdersVm&gt; orders)\r\n        {\r\n            // Write out the Json\r\n            var filePath = HostingEnvironment.MapPath(&quot;~/App_Data/orders.json&quot;);\r\n\r\n            var json = JsonConvert.SerializeObject(orders, Formatting.Indented);\r\n            System.IO.File.WriteAllText(filePath, json);\r\n\r\n            return true;\r\n        }\r\n        internal OrderManagerVM Retrieve()\r\n        {\r\n            var filePathOrders = HostingEnvironment.MapPath(&quot;~/App_Data/orders.json&quot;);\r\n            var filePathProducts = HostingEnvironment.MapPath(&quot;~/App_Data/products.json&quot;);\r\n            var filePathCustomers = HostingEnvironment.MapPath(&quot;~/App_Data/customers.json&quot;);\r\n\r\n            var jsonOrders = System.IO.File.ReadAllText(filePathOrders);\r\n            var jsonProducts = System.IO.File.ReadAllText(filePathProducts);\r\n            var jsonCustomers = System.IO.File.ReadAllText(filePathCustomers);\r\n\r\n            var orders = JsonConvert.DeserializeObject&lt;List&lt;customerOrdersVm&gt;&gt;(jsonOrders);\r\n            var products = JsonConvert.DeserializeObject&lt;List&lt;productVm&gt;&gt;(jsonProducts);\r\n            var customers = JsonConvert.DeserializeObject&lt;List&lt;customerVm&gt;&gt;(jsonCustomers);\r\n\r\n            OrderManagerVM result = new OrderManagerVM();\r\n            result.orders = orders;\r\n            result.products = products;\r\n            result.customers = customers;\r\n            return result;\r\n        }\r\n    }\r\n}\r\n",
    "group": "language-csharp"
  }
]